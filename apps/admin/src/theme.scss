@import "~@angular/material/prebuilt-themes/deeppurple-amber.css";
@import '~@angular/material/theming';
@include mat-core();
// //define the branch pallette 
// // http://mcg.mbitson.com/
$credixpress-primary: ( 
    50: #e1e6f4, 
    100: #b3c1e4, 
    200: #8098d3, 
    300: #4d6ec1, 
    400: #274fb3, 
    500: #0130a6, 
    600: #012b9e, 
    700: #012495, 
    800: #011e8b, 
    900: #00137b, 
    A100: #a8b0ff, 
    A200: #7581ff, 
    A400: #4252ff, 
    A700: #293bff, 
        contrast: ( 
            50: #000000, 
            100: #000000,
             200: #000000,
             300: #ffffff,
             400: #ffffff,
             500: #ffffff,
             600: #ffffff,
             700: #ffffff,
             800: #ffffff,
             900: #ffffff,
             A100: #000000,
             A200: #000000,
             A400: #ffffff,
             A700: #ffffff,
             ));

$credixpress-accent:  (
    50 : #ffa3a3,
    100 : #ff5757,
    200 : #ff1f1f,
    300 : #d60000,
    400 : #b80000,
    500 : #990000,
    600 : #7a0000,
    700 : #5c0000,
    800 : #3d0000,
    900 : #1f0000,
    A100 : #ff9999,
    A200 : #ff3333,
    A400 : #cc0000,
    A700 : #b30000,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #ffffff,
        300 : #ffffff,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #ffffff,
        A400 : #ffffff,
        A700 : #ffffff,
    )
);
$credixpress-background: ( 
    status-bar: map_get($mat-grey, 300), 
    app-bar: map_get($mat-grey, 100), 
    //background: map_get($mat-grey, 50), 
    hover: map_get($mat-grey, 400), 
    //card: map_get($mat-grey, 300), 
    //dialog: map_get($credixpress-primary, 50), 
    /*disabled-button: rgba(black, 0.12), 
    raised-button: white, 
    focused-button: $dark-focused, 
    selected-button: map_get($mat-grey, 300), 
    selected-disabled-button: map_get($mat-grey, 400), 
    disabled-button-toggle: map_get($mat-grey, 200), 
    unselected-chip: map_get($mat-grey, 300), 
    disabled-list-option: map_get($mat-grey, 200), */);
$credixpress-foreground: ( 
    base: black, 
    divider: $dark-dividers, 
    dividers: $dark-dividers, 
    disabled: $dark-disabled-text, 
    disabled-button: rgba(black, 0.26), 
    disabled-text: $dark-disabled-text, 
    elevation: black, 
    hint-text: $dark-disabled-text, 
    secondary-text: $dark-secondary-text, 
    icon: rgba(black, 0.54), 
    icons: rgba(black, 0.54), 
    text: rgba(black, 0.87), 
    slider-min: rgba(black, 0.87), 
    slider-off: rgba(black, 0.26), 
    slider-off-active: rgba(black, 0.38), 
    );
// // instead of creating a theme with mat-light-theme like a sane person, we will create our own theme-creating function that lets us apply our own foreground and background palettes.
@function create-credixpress-theme($primary, $accent, $warn: mat-palette($mat-red)) {
    @return ( primary: $primary, accent: $accent, warn: $warn, is-dark: false, foreground: $credixpress-foreground, background: $credixpress-background);
}

$credixpress-app-primary: mat-palette($credixpress-primary);
// //Also known as the secondary color Used for 
// //floating action buttons and interactive elements.
$credixpress-app-accent: mat-palette($credixpress-accent);
// // The warn palette is optional (defaults to red).
$credixpress-app-warn: mat-palette($mat-red);
// // Create the theme object (a Sass map containing all of the palettes).
$credixpress-app-theme: create-credixpress-theme($credixpress-app-primary, $credixpress-app-accent, $credixpress-app-warn);
// // Include theme styles for core and each component used in your app.
// // Alternatively, you can import and @include the theme mixins for each component
// // that you are using.
@include angular-material-theme($credixpress-app-theme);
$accent: map-get($credixpress-app-theme, accent );

.highlight {
    background-color: mat-color($mat-grey,200);
    height:  calc(100% + 100px);
}

// //generate class for flex columns  
@for $i from 1 through 8 {
    .flex-grow-#{$i} {
        flex-grow: $i
    }
}

// /* ==>  output output 
//   .flex-grow-8 {
//     flex-grow: 8
//   }
// */
.container {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    min-height: 88.5vh;
    ;
}

.container>* {
    width: 98%;
}

.flex-container {
    display: flex;
    font-weight: bold;
    text-align: center;
}